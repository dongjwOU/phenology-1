* Phenology Programs and Scripts

This repository is my attempt to organize some programs and scripts
related to phenology, the study of plant evolution through digital
images. Below you'll find the requirements to make this project useful
for you. All code available here is released under the GPLv3. Feel
free to copy, modify and do whatever you want. Contributions are very
welcomed to improve the robustness or anything else you might find
important. In case of problems, [[https://github.com/schnorr/phenology/issues][report here]].

This repository contains the following programs:

+ =pga_hist=: This program takes as input three parameters - an image
  (JPG), a mask (JPG) and the granularity of the histogram of pixel's
  green average metric, which is basically =G/(R+G+B)=. The granularity
  tells you the amount of bins in the histogram. The output is one
  line with the count for every bin, separated by comma as in the CSV
  file format. See an example of it in action:

  #+begin_src sh :results output :session :exports both
  pga_hist ./images/tky.jpg ./masks/tky.jpg 20
  #+end_src

  #+RESULTS:
  : 0,0,0,0,0,0,82807,783737,362094,29447,1686,109,11,3,0,0,0,0,0,0

+ =pga_palette=: This program takes as input seven parameters - an image
  (JPG), a mask (JPG), a palette in the file format specified below,
  the lowest and the highest bin identifier to consider, the
  granularity of the histogram and the output image file (that will be
  encoded as JPG in the RGB file format using the colors available in
  the palette). A crucial semantic rule is that the different between
  the high and lowest bin identifiers should be smaller than the
  number of available colors of the palette provided. The program is
  expected to fail otherwise.

** Requirements

#+begin_src sh :results output :session :exports both
sudo apt-get install cmake libjpeg-dev r-base
#+end_src

** Cloning, compilation and installation

You might want to customize the =CMAKE_INSTALL_PREFIX= variable to your
machine. In the example below, this project will be made available in
the =/tmp/phenology/= directory.

#+begin_src sh :results output :session :exports both
git clone https://github.com/schnorr/phenology.git
cd phenology ; mkdir build ; cd build
cmake -DCMAKE_INSTALL_PREFIX=/tmp/phenology/ .. ; make install
#+end_src

** Directory Organization and Photo Specifications

*Images*

The digital images have to be in the JPG file format. No other format
is accepted as of now. All of them should have the exactly same size
(=width= per =height=) and be encoded as RGB (with no alpha channel).
organized image base.

*Directories*

Images should be organized in the following directory structure:
=db/year/year_sequence.jpg=, where =db= is the name of the database, it
can be anything you want (or need); =year= is a diretory that will hold
all that year's images; =year_sequence.jpg= is the name of the file: the
year part should be preferably the same as the directory name holding
the file and the sequence is a integer or floating-point number that
indicates the sequence of images within that year. Some examples:

1. This example has four images. We can notice that the image 003 is
   missing, that is okay. You can use this king of sequencing if you
   have one digital photo per day, for instance.
   #+BEGIN_EXAMPLE
   db01/2004/2004_001.jpg
   db01/2004/2004_002.jpg
   db01/2004/2004_004.jpg
   db01/2004/2004_005.jpg
   #+END_EXAMPLE

2. This example shows another type of sequencing, using floating-point
   numbers. You can use this to organize multiple photos per day. Note
   that is up to you to give semantics to the sequencing scheme.
   #+BEGIN_EXAMPLE
   mybase/2015/2015_1.1.jpg
   mybase/2015/2015_1.2.jpg
   mybase/2015/2015_1.3.jpg
   mybase/2015/2015_2.jpg
   #+END_EXAMPLE

** The mask

You probably need to mask your images. A mask image should be also in
the JPG file format. It should have the exactly same size (=width= per
=height=) as the digital photos of the database, and also be encoded as
RGB (with no alpha channel). The white color selects the regions you
are interested to. Here I provide two examples:

[[./masks/cerrado.jpg]] [[./masks/tky.jpg]]

** Usage




